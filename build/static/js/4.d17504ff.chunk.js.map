{"version":3,"sources":["container/Navbar/index.jsx","container/Home/index.jsx","assets/gita.png","container/Chapters/ChaptersCard.jsx","container/Skeleton/index.jsx","container/Chapters/index.jsx","redux/actions/chapters.js","container/Chapter/index.jsx","redux/actions/chapter.js","App.js"],"names":["Navigationbar","props","useState","isOpen","setIsOpen","setColor","useEffect","window","addEventListener","changeColor","removeEventListener","document","documentElement","scrollTop","body","Navbar","light","expand","className","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Home","Container","fluid","Card","styled","MyCard","ChaptersCard","title","verseCount","chapterNumber","to","CardHeader","alt","src","C1i","CardBody","Skeleton","Chapters","chapters","fetchChapters","sortedList","setList","skeletons","index","push","Col","init","a","sort","b","chapter_number","length","Row","xs","sm","md","xl","map","chapter","translation","verses_count","defaultProps","mapDispatchToProps","dispatch","type","GET_CHAPTERS","payload","request","url","method","options","onSuccess","response","data","error","status","SUCCESS","Promise","resolve","reject","onError","exception","isAxiosError","dataError","FAIL","connect","chaptersReducer","Chapter","fetchChapter","flag","useParams","verse_count","name","meaning","en","summary","hi","id","GET_CHAPTER","getChapter","chapterReducer","App","path","component","exact"],"mappings":"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","file":"static/js/4.d17504ff.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\n\r\nconst Navigationbar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [color, setColor] = useState(\"navbar-transparent\");\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeColor);\r\n    return function cleanup() {\r\n      window.removeEventListener(\"scroll\", changeColor);\r\n    };\r\n  }, []);\r\n\r\n  const changeColor = () => {\r\n    if (\r\n      document.documentElement.scrollTop > 99 ||\r\n      document.body.scrollTop > 99\r\n    ) {\r\n      setColor(\"bg-info\");\r\n    } else if (\r\n      document.documentElement.scrollTop < 100 ||\r\n      document.body.scrollTop < 100\r\n    ) {\r\n      setColor(\"navbar-transparent\");\r\n    }\r\n  };\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Navbar light expand=\"md\" className=\"px-4\">\r\n      <NavbarBrand href=\"/\">Bhagavad Gita</NavbarBrand>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink href=\"/\">Home</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"/chapters\">Chapters</NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","import React from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container fluid className=\"wrapper text-center\">\r\n      <h1>Bhagavad Gita</h1>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/gita.b36b22c5.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card as MyCard, CardBody, CardHeader } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport C1i from \"../../assets/gita.png\";\r\n\r\nconst Card = styled(MyCard)`\r\n  width: 100%;\r\n  height: auto;\r\n  max-height: 350px !important;\r\n  transition: all 0.5s ease-out;\r\n  z-index: 100;\r\n  background: transparent;\r\n  object-fit: cover;\r\n  overflow: hidden;\r\n  box-shadow: 0 5px 10px 0 rgba(31, 38, 135, 0.37);\r\n  border: none !important;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 240px;\r\n  }\r\n\r\n  &:hover {\r\n    transform: translateY(-10px);\r\n    z-index: 1000;\r\n    text-decoration: none;\r\n  }\r\n\r\n  a,\r\n  h6,\r\n  p {\r\n    color: #111 !important;\r\n    text-decoration: none !important;\r\n  }\r\n\r\n  p {\r\n    font-size: 13px !important;\r\n    margin: 0 5px !important;\r\n  }\r\n\r\n  .card-body {\r\n    background: rgba(55, 185, 238, 0.4);\r\n    backdrop-filter: blur(11px);\r\n    -webkit-backdrop-filter: blur(11px);\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst ChaptersCard = ({ title, verseCount, chapterNumber }) => {\r\n  return (\r\n    <Card>\r\n      <Link to={`/chapter/${chapterNumber}`}>\r\n        <CardHeader className=\"p-0 border-0\">\r\n          <img alt=\"Chapter 1\" src={C1i} />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <h6>Chapter {chapterNumber}</h6>\r\n          <p>\r\n            <i>{verseCount} verses</i>\r\n          </p>\r\n          <p>{title}</p>\r\n        </CardBody>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChaptersCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Card as MyCard, CardBody, CardHeader } from \"reactstrap\";\r\n\r\nimport C1i from \"../../assets/gita.png\";\r\n\r\nconst Card = styled(MyCard)`\r\n  width: 100%;\r\n  height: 360px !important;\r\n  max-height: 360px !important;\r\n  border-radius: 10px;\r\n  transition: all 0.5s ease-out;\r\n  background: rgb(231 229 229 / 75%) !important;\r\n  border-radius: 10px;\r\n  border: none !important;\r\n\r\n  .box {\r\n    width: 100%;\r\n    height: 240px;\r\n    background: rgba(255, 255, 255, 0.5) !important;\r\n  }\r\n\r\n  .text-box {\r\n    text-decoration: none !important;\r\n    margin: 10px 5px !important;\r\n    background: rgba(0, 0, 0, 0.2) !important;\r\n    border-radius: 10px;\r\n    width: 100%;\r\n    height: 10px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Skeleton = ({ title, verseCount, chapterNumber }) => {\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"p-0\">\r\n        <div className=\"box\" />\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"text-box\"></div>\r\n        <div className=\"text-box\"></div>\r\n        <div className=\"text-box\"></div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Container } from \"reactstrap\";\r\nimport ChaptersCard from \"./ChaptersCard\";\r\nimport { getChapters } from \"../../redux/actions/chapters\";\r\n\r\nimport Skeleton from \"../Skeleton\";\r\n\r\nconst Chapters = ({ chapters, fetchChapters }) => {\r\n  const [sortedList, setList] = useState([]);\r\n  let skeletons = [];\r\n\r\n  for (let index = 0; index < 12; index++) {\r\n    skeletons.push(\r\n      <Col className=\"p-1\" key={index + 1}>\r\n        <Skeleton />\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  const init = async () => {\r\n    await fetchChapters();\r\n    setList(\r\n      chapters.sort((a, b) => {\r\n        return a.chapter_number - b.chapter_number;\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    return () => {};\r\n  }, [chapters]);\r\n\r\n  return (\r\n    <Container fluid className=\"wrapper\">\r\n      <h2 className=\"text-center text-dark pt-2 pb-3\">Chapters</h2>\r\n      {!sortedList.length ? (\r\n        <Row xs=\"1\" sm=\"2\" md=\"3\" xl=\"6\" className=\"no-gutters\">\r\n          {skeletons}\r\n        </Row>\r\n      ) : (\r\n        <Row xs=\"1\" sm=\"2\" md=\"3\" xl=\"6\" className=\"no-gutters\">\r\n          {sortedList.map((chapter) => (\r\n            <Col key={chapter.chapter_number} className=\"p-2\">\r\n              <ChaptersCard\r\n                title={chapter.translation}\r\n                chapterNumber={chapter.chapter_number}\r\n                verseCount={chapter.verses_count}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nChapters.propTypes = {\r\n  chapters: PropTypes.instanceOf(Array),\r\n  fetchChapters: PropTypes.func,\r\n};\r\n\r\nChapters.defaultProps = {\r\n  chapters: [],\r\n  fetchChapters: () => {},\r\n};\r\n\r\nconst mapStateToProps = ({ chaptersReducer: { chapters } }) => ({ chapters });\r\n\r\nconst mapDispatchToProps = {\r\n  fetchChapters: () => getChapters(),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chapters);\r\n","import { FAIL, GET_CHAPTERS, SUCCESS } from '../action-types';\r\n\r\nexport const getChapters = () => dispatch => dispatch({\r\n    type: GET_CHAPTERS,\r\n    payload: {\r\n        request: {\r\n            url: `https://vedicscripturesapi.herokuapp.com/gita/chapters`,\r\n            method: 'GET',\r\n        },\r\n        options: {\r\n            onSuccess({ response }) {\r\n                const { data, error, status } = response;\r\n                if (status) {\r\n                    dispatch({\r\n                        type: `${GET_CHAPTERS}_${SUCCESS}`,\r\n                        payload: [...data],\r\n                    });\r\n                    return Promise.resolve({ ...data });\r\n                }\r\n                dispatch({\r\n                    type: `${GET_CHAPTERS}_${SUCCESS}`,\r\n                    payload: { ...error },\r\n                });\r\n                return Promise.reject({ ...error });\r\n            },\r\n            onError(exception) {\r\n                if (exception.error.isAxiosError) {\r\n                    const { response: { data: dataError }, } = exception.error;\r\n                    dispatch({\r\n                        type: `${GET_CHAPTERS}_${FAIL}`,\r\n                        payload: { dataError }\r\n                    });\r\n                    return Promise.reject(dataError);\r\n                }\r\n                dispatch({\r\n                    type: `${GET_CHAPTERS}_${FAIL}`,\r\n                    payload: {}\r\n                });\r\n                return Promise.reject();\r\n            },\r\n        },\r\n\r\n    },\r\n})","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Row, Col, Container } from \"reactstrap\";\r\n\r\nimport { getChapter } from \"../../redux/actions/chapter\";\r\n\r\nconst Chapter = ({ fetchChapter, chapter }) => {\r\n  const { flag } = useParams();\r\n\r\n  const init = async () => {\r\n    await fetchChapter(flag);\r\n  };\r\n  useEffect(() => {\r\n    init();\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid className=\"wrapper\">\r\n      <Row className=\"chapter-row p-2\">\r\n        <Col>\r\n          <h3 className=\"text-center py-3\">{`Chapter ${chapter?.chapter_number}`}</h3>\r\n          <h5 className=\"text-center\">{chapter?.verse_count}</h5>\r\n          <p className=\"lead text-center\">{`${chapter?.name}   (${chapter?.translation})`}</p>\r\n          <h6>\r\n            <i className=\"font-weight-bold\">Meaning:</i> {chapter.meaning?.en}\r\n          </h6>\r\n          <h3>Summary in Hindhi</h3>\r\n          <p>{chapter.summary?.hi}</p>\r\n          <h3>Summary in English</h3>\r\n          <p>{chapter.summary?.en}</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nChapter.propTypes = {\r\n  fetchChapter: PropTypes.func,\r\n  chapter: PropTypes.instanceOf(Object),\r\n};\r\n\r\nChapter.defaultProps = {\r\n  fetchChapter: () => {},\r\n  chapter: {},\r\n};\r\n\r\nconst mapStateToProps = ({ chapterReducer: { chapter } }) => ({ chapter });\r\nconst mapDispatchToProps = { fetchChapter: (id) => getChapter(id) };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chapter);\r\n","import { GET_CHAPTER, SUCCESS, FAIL } from '../action-types';\r\n\r\nexport const getChapter = (id) => dispatch => dispatch({\r\n    type: GET_CHAPTER,\r\n    payload: {\r\n        request: {\r\n            url: `https://vedicscripturesapi.herokuapp.com/gita/${id}`,\r\n            method: 'GET',\r\n        },\r\n        options: {\r\n            onSuccess({ response }) {\r\n                const { data, error, status } = response;\r\n                if (status) {\r\n                    dispatch({\r\n                        type: `${GET_CHAPTER}_${SUCCESS}`,\r\n                        payload: { ...data },\r\n                    });\r\n                    return Promise.resolve({ ...data });\r\n                }\r\n                dispatch({\r\n                    type: `${GET_CHAPTER}_${SUCCESS}`,\r\n                    payload: { ...error },\r\n                });\r\n                return Promise.reject({ ...error });\r\n            },\r\n            onError(exception) {\r\n                if (exception.error.isAxiosError) {\r\n                    const { response: { data: dataError }, } = exception.error;\r\n                    dispatch({\r\n                        type: `${GET_CHAPTER}_${FAIL}`,\r\n                        payload: { dataError }\r\n                    });\r\n                    return Promise.reject(dataError);\r\n                }\r\n                dispatch({\r\n                    type: `${GET_CHAPTER}_${FAIL}`,\r\n                    payload: {}\r\n                });\r\n                return Promise.reject();\r\n            },\r\n        },\r\n\r\n    },\r\n})","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Navbar from './container/Navbar';\r\nimport Home from './container/Home';\r\nimport Chapters from './container/Chapters';\r\nimport Chapter from './container/Chapter';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/chapters\" component={Chapters} exact />\r\n          <Route path=\"/chapter/:flag\" component={Chapter} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"sourceRoot":""}